//IEEE Floating Point to Integer Converter (Single Precision)
//Copyright (C) Jonathan P Dawson 2013
//2013-12-12
`timescale 1ns / 1ps

module fp_float2int
  (
   input         clk,
   input         rst,

   input         start,
   output        done,
         
   input [31:0]  op,
                
   output [31:0] res
   );

   reg [1:0]     state;
   localparam get_op        = 2'd0,
              special_cases = 2'd1,
              unpack        = 2'd2,
              convert       = 2'd3;

   reg [31:0]    a_m, a, z;
   reg [8:0]     a_e;
   reg           a_s;

   always @(posedge clk) begin
      case(state)
        get_op: begin
           if (start) begin
              a <= op;
              state <= unpack;
           end
        end
        unpack: begin
           a_m[31:8] <= {1'b1, a[22 : 0]};
           a_m[7:0] <= 0;
           a_e <= a[30 : 23] - 127;
           a_s <= a[31];
           state <= special_cases;
        end
        special_cases: begin
           if ($signed(a_e) == -127) begin
              z <= 0;
              state <= get_op;
           end else if ($signed(a_e) > 31) begin
              z <= 32'h80000000;
              state <= get_op;
           end else begin
              state <= convert;
           end
        end
        convert: begin
           if ($signed(a_e) < 31 && a_m) begin
              a_e <= a_e + 1;
              a_m <= a_m >> 1;
           end else begin
              if (a_m[31]) begin
                 z <= 32'h80000000;
              end else begin
                 z <= a_s ? -a_m : a_m;
              end
              state <= get_op;
           end
        end
      endcase

      if (rst) begin
         state <= get_op;
      end
   end

   assign res = z;
   assign done = (state == get_op)? 1'b1 : 1'b0;

endmodule
